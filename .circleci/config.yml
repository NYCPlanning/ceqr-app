# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  rails_tests:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.7.7
        environment:
          DATABASE_URL: postgis://ceqr@127.0.0.1/ceqr_test
          JWT_SALT: TEST_RANDOM_KEY
          ADMIN_EMAILS: test@example.com
          SENDGRID_KEY: NOPE

      # Specify service dependencies here if necessary # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:12.1-postgis
        environment:
          POSTGRES_USER: ceqr
          POSTGRES_DB: ceqr_test
          POSTGRES_HOST_AUTH_METHOD: trust

    working_directory: ~/repo/backend

    steps:
      - checkout:
          path: ~/repo

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install rails deps
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run:
          name: setup DB
          command: |
            bundle exec rake db:create
            bundle exec rake db:schema:load
            bundle exec rake db:migrate
            bundle exec rake db:seed

      # run tests!
      - run:
          name: run tests
          command: bundle exec rails spec

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  ember_tests:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.18-browsers
        environment:
          BUILD_CONTEXT: test

    working_directory: ~/repo/frontend

    steps:
      - checkout:
          path: ~/repo

      - run:
          name: install ember deps
          command: yarn

      # run tests!
      - run:
          name: run tests
          command: COVERAGE=true yarn test

      - run: curl -s https://codecov.io/bash | bash

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

workflows:
  version: 2
  run_tests:
    jobs:
      - rails_tests
      - ember_tests
